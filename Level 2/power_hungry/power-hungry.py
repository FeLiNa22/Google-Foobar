from random import randint

def solution(xs):
    no_of_panels = len(xs)
    if(no_of_panels < 1 or no_of_panels > 50):
        raise Exception("Invalid Argument: Array must have 1-50 panels") 
    # Base Case 
    # if ther is only one panel, then there is no choice to remove anything
    if(no_of_panels == 1):
       return str(xs[0]);
    # holds the maximum power that can be generated by the panels
    maxPower = 0;
    # holds the minimum +ive power that can be generated
    minPower = 0;
    # holds the least draining solar panels value
    largestNeg = 0;
    # iterate through each panel of array complexity O(n)
    for p in xs:
        if(p < -1000 or p > 1000):
          raise Exception("Error : cannot have solar panels generating/draining more than 1000 Watts")  
        elif(p != 0):
            if (maxPower == 0):
                maxPower = p;
            else:
                maxPower *= p;
                
            # gets the smallest +ive power that can be generated
            if(p > minPower):
                minPower = p;
            elif(maxPower > minPower):
                minPower = maxPower;
                
            if(p < 0):
                # if no malfunctioning solar panel has been found yet 
                # or current panel p is the least draining panel
                if (largestNeg == 0 or p > largestNeg):
                    largestNeg = p;

    # if overall power is negative   
    if(maxPower < 0):
        # remove least draining power
        maxPower = int(maxPower / largestNeg)
        # if this was the only draining power
        if(maxPower == 1):
            #set the output to the next min
            maxPower = minPower;
    return(str(maxPower));
    
    
# Test Code
if __name__ == '__main__': 
    big_array = [randint(-1000, 1000) for _ in range(50)]
    tests = [[-3, 0],
             [1, 1, -10],
             [-1, 0],
             [-2, -3, -5, -5, -10], 
             [ -1, -1, -2, 4, 3 ],
             [0,-2,0,32,21,0] ]
    for t in tests:
        print('array {} \n\t max: {}'.format(t, solution(t)))